# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
#
# apache_directories_custom_fragment.rb
#

# ---- original file header ----
#
# @summary
#   
#    Takes 'directories' hash match puppet-apache vhosts requirement. Explodes custom_fragment list into
#    \n separated string.
#
#
Puppet::Functions.create_function(:'apache_directories_custom_fragment') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    unless args.length == 1
      raise Puppet::ParseError, ("apache_directories_custom_fragment(): wrong number of arguments (#{args.length}; must be 1)")
    end

    directories = args[0]

    unless directories.is_a?(Hash)
      raise Puppet::ParseError, ("apache_directories_custom_fragment(): expects a hash)")
    end

    directories.each do |index, directory|
      next if !directory.key?('custom_fragment')
      next if !directory['custom_fragment'].is_a?(Array)

      directories[index]['custom_fragment'] = directory['custom_fragment'].join("\n    ")
    end

    return directories

  
  end
end
