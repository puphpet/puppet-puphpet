# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
require 'yaml'
require 'deep_merge'

# ---- original file header ----
#
# @summary
#       Deep merges two or more YAML files using Hash#deep_merge
#
#
Puppet::Functions.create_function(:'merge_yaml') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    if args.length < 2
      raise Puppet::ParseError, ("merge_yaml(): wrong number of arguments (#{args.length}; must be at least 2)")
    end

    generatedHash = { }

    args.each do |value|
      if (!value.is_a?(Array))
        if File.file?(value)
          generatedHash.deep_merge!(YAML.load_file(value))
        end
      else
        value.each do |valueInner|
          if File.file?(valueInner)
            generatedHash.deep_merge!(YAML.load_file(valueInner))
          end
        end
      end

    end

    return generatedHash
  
  end
end
