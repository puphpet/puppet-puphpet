# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
#
# hash_key_equals.rb
#

# ---- original file header ----
#
# @summary
#   
#    Returns true if the variable passed to this function is a hash,
#    it contains the key requested, and the key matches value.
#
#
Puppet::Functions.create_function(:'hash_key_equals') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    unless args.length == 3
      raise Puppet::ParseError, ("hash_key_equals(): wrong number of arguments (#{args.length}; must be 3)")
    end

    hashVar       = args[0]
    keyVar        = args[1]
    expectedValue = args[2]

    unless hashVar.is_a?(Hash)
      return false
    end

    unless hashVar.has_key?(keyVar)
      return false
    end

    unless hashVar[keyVar].to_i == expectedValue.to_i
      return false
    end

    return true

  
  end
end
